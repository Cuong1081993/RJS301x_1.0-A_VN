{"ast":null,"code":"var _jsxFileName = \"D:\\\\BAITAP_FUNIX\\\\RJS301x_1.0-A_VN\\\\Router-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  requets,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch detail for selected event'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","requets","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["D:/BAITAP_FUNIX/RJS301x_1.0-A_VN/Router-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData,json } from 'react-router-dom';\r\nimport EventItem from '../components/EventItem';\r\nfunction EventDetailPage() {\r\n  \r\n  const data = useLoaderData();\r\n  return (\r\n    <>\r\n    <EventItem event={data.event}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\nexport  async function loader({requets,params}){\r\n\r\n  const id = params.eventId;\r\nconst response = await fetch('http://localhost:8080/events/' + id);\r\n\r\nif(!response.ok){\r\n  throw json(\r\n    {message : 'Could not fetch detail for selected event'},\r\n    {status: 500}\r\n  )\r\n}else{\r\n  return response;\r\n}\r\n\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAACC,IAAI,QAAQ,kBAAkB;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEzB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACAN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC7B,CAAC;AAEP;AAACP,EAAA,CARQD,eAAe;EAAA,QAETP,aAAa;AAAA;AAAAgB,EAAA,GAFnBT,eAAe;AAUxB,eAAeA,eAAe;AAC9B,OAAQ,eAAeU,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAE7C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMvB,IAAI,CACR;MAACwB,OAAO,EAAG;IAA2C,CAAC,EACvD;MAACC,MAAM,EAAE;IAAG,CACd,CAAC;EACH,CAAC,MAAI;IACH,OAAOJ,QAAQ;EACjB;AAEA;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}