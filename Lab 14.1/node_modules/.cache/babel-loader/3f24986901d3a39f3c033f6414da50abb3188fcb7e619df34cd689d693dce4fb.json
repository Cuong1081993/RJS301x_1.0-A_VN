{"ast":null,"code":"var _jsxFileName = \"D:\\\\BAITAP\\\\FUNIX\\\\RJS301x_1.0-A_VN\\\\Input Hook\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(true);\n  useEffect(() => {\n    if (enteredNameIsValid) {}\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(true);\n      return;\n    }\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredNameIsValid(true);\n    const enteredValue = nameInputRef.current.value;\n    setEnteredName(\"\");\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = enteredNameIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        ref: nameInputRef,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"f5uOP6hNmimwj7mwZrbHBJnAZvE=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","nameInputChangeHandler","event","target","value","trim","nameInputBlurHandler","formSubmitHandler","preventDefault","enteredValue","current","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","ref","_c","$RefreshReg$"],"sources":["D:/BAITAP/FUNIX/RJS301x_1.0-A_VN/Input Hook/src/components/SimpleInput.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(true);\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n    }\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(true);\n      return;\n    }\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    setEnteredNameIsValid(true);\n    const enteredValue = nameInputRef.current.value;\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = enteredNameIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          ref={nameInputRef}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}