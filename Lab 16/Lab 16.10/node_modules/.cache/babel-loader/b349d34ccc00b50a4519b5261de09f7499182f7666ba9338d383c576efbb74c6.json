{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initiaCounterState = {\n  counter: 0,\n  showCounter: true,\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initiaCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initiaCounterState","counter","showCounter","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initAuthState","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["D:/BAITAP_FUNIX/RJS301x_1.0-A_VN/Lab 15/Lab 15.15/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initiaCounterState = { counter: 0, showCounter: true, isAuthenticated: false };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState:initiaCounterState,\r\n  reducers: {\r\n    \r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    }\r\n  }\r\n});\r\n\r\nconst initAuthState ={\r\n  isAuthenticated : false\r\n};\r\nconst authSlice = createSlice({\r\n  name: 'authentication',\r\n  initialState : initAuthState,\r\n  reducers:{\r\n    login(state){\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state){\r\n      state.isAuthenticated = false;\r\n    }\r\n  }\r\n});\r\nconst store = configureStore({\r\n  reducer: {counter: counterSlice.reducer, auth : authSlice.reducer}\r\n});\r\n\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,kBAAkB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE,IAAI;EAAEC,eAAe,EAAE;AAAM,CAAC;AAEpF,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfC,YAAY,EAACN,kBAAkB;EAC/BO,QAAQ,EAAE;IAERC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACR,OAAO,EAAE;IACjB,CAAC;IACDS,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACR,OAAO,EAAE;IACjB,CAAC;IACDU,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGW,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACP,WAAW,GAAG,CAACO,KAAK,CAACP,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMa,aAAa,GAAE;EACnBZ,eAAe,EAAG;AACpB,CAAC;AACD,MAAMa,SAAS,GAAGlB,WAAW,CAAC;EAC5BO,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAGS,aAAa;EAC5BR,QAAQ,EAAC;IACPU,KAAKA,CAACR,KAAK,EAAC;MACVA,KAAK,CAACN,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDe,MAAMA,CAACT,KAAK,EAAC;MACXA,KAAK,CAACN,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AACF,MAAMgB,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IAACnB,OAAO,EAAEG,YAAY,CAACgB,OAAO;IAAEC,IAAI,EAAGL,SAAS,CAACI;EAAO;AACnE,CAAC,CAAC;AAGF,OAAO,MAAME,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAC5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}